#!/usr/bin/env bash
# Usage:
#
#     $ bin/compile <build-dir> <cache-dir> <env-path>

# Fail fast and fail hard.
set -eo pipefail

indent() {
  sed -u 's/^/       /'
}

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

PATH="$BUILD_DIR/local/bin:$PATH"

export PERL5LIB="$BUILD_DIR/local/lib/perl5"

PERL_CPANM_OPT="--quiet --notest -l $BUILD_DIR/local"
if [ -f $ENV_DIR/PERL_CPANM_OPT ]; then
  PERL_CPANM_OPT="$PERL_CPANM_OPT $(cat $ENV_DIR/PERL_CPANM_OPT)"
fi
export PERL_CPANM_OPT

rm -rf $BUILD_DIR/local
if [ -d $CACHE_DIR/local ]; then
  cp -a $CACHE_DIR/local $BUILD_DIR/local
fi

cd $BUILD_DIR

if ! [ -e $BUILD_DIR/local/bin/cpanm ]; then
  echo "-----> Bootstrapping cpanm"
  curl -L --silent https://raw.github.com/miyagawa/cpanminus/master/cpanm | perl - App::cpanminus 2>&1 | indent
fi

echo "-----> Installing dependencies"
echo "cpanm options: $PERL_CPANM_OPT" | indent
cpanm --installdeps . 2>&1 | indent

echo "-----> Detect app type and create startup script"
COMMONCMD="#!/bin/sh\nPERL5LIB=\$PWD/local/lib/perl5/ perl -Mlib=\$PWD/local/lib/perl5"
if [ -f $BUILD_DIR/app.pl ] || [ -f $BUILD_DIR/app-daemon.pl ]; then
  echo "It is a Mojolicious app with Daemon" | indent
  DAEMONSETUP="daemon -l http://*:\$PORT -m production\n"
  if [ -f $BUILD_DIR/app.pl ]; then
    printf "$COMMONCMD app.pl $DAEMONSETUP" > $BUILD_DIR/mojostart.sh
  else
    printf "$COMMONCMD app-daemon.pl $DAEMONSETUP" > $BUILD_DIR/mojostart.sh
  fi
elif [ -f $BUILD_DIR/app-hypnotoad.pl ]; then
  echo "It is a Mojolicious app with Hypnotoad" | indent
  TOADSETUP="./local/bin/hypnotoad -f"
  printf "$COMMONCMD $TOADSETUP app-hypnotoad.pl\n" > $BUILD_DIR/mojostart.sh
else
  printf "\nERROR: Then app name is not correct"
  exit 1
fi
chmod a+x $BUILD_DIR/mojostart.sh

if [ -d $BUILD_DIR/local ]; then
  rm -rf $CACHE_DIR/local
  mkdir -p $CACHE_DIR
  cp -a $BUILD_DIR/local $CACHE_DIR/local
fi
